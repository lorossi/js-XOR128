class XOR128{constructor(r=null,t=null,n=null,e=null){if(r instanceof Array){if(r.length>4)throw new Error("XOR128: too many seeds");for(let t=r.length;t<4;t++)r.push(r[t-1]+1);return new XOR128(r[0],r[1],r[2],r[3])}if(null==r&&(r=Math.floor(4294967296*Math.random())),null==t&&(t=null!=r?r+1:Math.floor(4294967296*Math.random())),null==n&&(n=null!=t?t+1:Math.floor(4294967296*Math.random())),null==e&&(e=null!=n?n+1:Math.floor(4294967296*Math.random())),"number"!=typeof r||"number"!=typeof t||"number"!=typeof n||"number"!=typeof e)throw new Error("XOR128: seed values must be numbers");if(r<1||t<1||n<1||e<1)throw new Error("XOR128: seed values must be greater than 0");if(arguments.length>4)throw new Error("XOR128: too many arguments");this._x=r,this._y=t,this._z=n,this._w=e}random(r=null,t=null){if(null==r&&null==t?(r=0,t=1):null==t&&(t=r,r=0),r>t)throw new Error("XOR128: first parameter must be smaller than second");if("number"!=typeof r||"number"!=typeof t)throw new Error("XOR128: parameters must be numbers");const n=this._x^this._x<<11>>>0;return this._x=this._y,this._y=this._z,this._z=this._w,this._w=(this._w^this._w>>>19^n^n>>>8)>>>0,this._w/4294967296*(t-r)+r}random_int(r=null,t=null){return null==r&&null==t?(r=0,t=2):null==t&&(t=r,r=0),Math.floor(this.random(r,t))}random_bool(){return this.random()>.5}random_string(r=10,t="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789"){let n="";for(let e=0;e<r;e++)n+=t[this.random_int(0,t.length)];return n}random_interval(r=.5,t=.5){return this.random(r-t,r+t)}random_from_array(r){if(!(r instanceof Array))throw new Error("XOR128: parameter must be an array");return r[this.random_int(0,r.length)]}random_from_string(r){if("string"!=typeof r)throw new Error("XOR128: parameter must be a string");return r.charAt(this.random_int(0,r.length))}pick(r){if(r instanceof Array)return this.random_from_array(r);if("string"==typeof r)return this.random_from_string(r);throw new Error("XOR128: parameter must be an array or a string")}shuffle_array(r){return[...r].map(r=>({sort:this.random(),value:r})).sort((r,t)=>r.sort-t.sort).map(r=>r.value)}shuffle_string(r){return r.split("").map(r=>({sort:this.random(),value:r})).sort((r,t)=>r.sort-t.sort).map(r=>r.value).join("")}shuffle(r){if(r instanceof Array)return this.shuffle_array(r);if("string"==typeof r)return this.shuffle_string(r);throw new Error("XOR128: parameter must be an array or a string")}}