class XOR128{constructor(t=null,r=null,l=null,n=null){if(null!=t&&null!=t||(t=Math.floor(4294967296*Math.random())),null!=r&&null!=t||(r=Math.floor(4294967296*Math.random())),null!=l&&null!=t||(l=Math.floor(4294967296*Math.random())),null!=n&&null!=t||(n=Math.floor(4294967296*Math.random())),"number"!=typeof t||"number"!=typeof r||"number"!=typeof l||"number"!=typeof n)throw new Error("XOR128: seed values must be numbers");if(t<1||r<1||l<1||n<1)throw new Error("XOR128: seed values must be greater than 0");this._x=t,this._y=r,this._z=l,this._w=n}random(t=null,r=null){null==t&&null==r?(t=0,r=1):null==r&&(r=t,t=0);const l=this._x^this._x<<11>>>0;return this._x=this._y,this._y=this._z,this._z=this._w,this._w=(this._w^this._w>>>19^l^l>>>8)>>>0,this._w/4294967296*(r-t)+t}random_int(t=null,r=null){return null==t&&null==r?(t=0,r=2):null==r&&(r=t,t=0),Math.floor(this.random(t,r+1))}random_interval(t=.5,r=.5){return this.random(t-r,t+r)}random_from_array(t){return t[this.random_int(0,t.length)]}shuffle_array(t){return t.map(t=>({sort:this.random(),value:t})).sort((t,r)=>t.sort-r.sort).map(t=>t.value)}shuffle_string(t){return t.split("").map(t=>({sort:this.random(),value:t})).sort((t,r)=>t.sort-r.sort).map(t=>t.value).join("")}}